Con las variables de arreglos(array) de JavaScript, podemos almacenar varios
datos en un solo lugar.

Inicias una declaracion de arreglo con un corchete de apertura, lo terminas
con un corchete de cierre, y pones una coma entre cada entrada de esta forma:

    const sandwich = ["jamon", "mas jamon", "mucho mas jamon"];

ACTIVIDAD:

    - MODIFICA EL NUEVO ARREGLO myArray PARA QUE CONTENGA TANTO UNA CADENA
    COMO UN NUMERO(EN ESE ORDEN).

    const myArray = ["Hola", 1];

----------------------------------------
ARREGLOS ANIDADOS DENTRO DE OTRO ARREGLO
----------------------------------------

Tambien puedes anidar arreglos dentro de otros arreglos, como acontinuacion:

    const teams = [["Bulls", 23], ["White Sox", 45]];

Esto tambien es conocido como arreglo multidimensional.

ACTIVIDAD:

    - CREA UN ARREGLO ANIDADO LLAMADO myArray.

---------------------------------------------
ACCEDE A LOS DATOS DE UN ARREGLO CON INDICES.
---------------------------------------------

Podemos acceder a los datos dentro de un arreglo usando indices.

Los indices de los arreglos se escriben en la misma notacion de corchetes que
usan las cadenas de texto, con la excepcion que en vez de especificar
un caracter, se especifica una entrada en el arreglo. Asi como las cadenas de
texto, los arreglos usan indexacion empezando desde 0, en donde el primer
elemento de un arreglo tiene como indice 0.

Ejemplo:

    const array = [50, 60, 70];
    console.log(array[0]);
    const data = array[1];

console.log(array[0]) imprime 50, y data tiene el valor 60.

ACTIVIDAD:

    - CREA UNA VARIABLE LLAMADA myData Y ESTABLECELA PARA QUE SEA IGUAL AL 
    PRIMER VALOR DE myArray USANDO NOTACION DE CORCHETES.

    const myArray = [50, 60, 70];
    const myData = myArray3[0];

--------------------------------
MODIFICA LOS DATOS DE UN ARREGLO
--------------------------------

A diferencia de las cadenas, las entradas de los arreglos son mutables y pueden
cambiarse libremente, inclusi si el arreglo fue declarado con const.

Ejemplo:

    const ourArray = [1, 2, 3];
    ourArray[0] = 50;
    
"ourArray" ahora tiene el valor [15, 40, 30].

Nota: No debe haber espacios entre el nombre del arreglo y los corchetes, 
como array [0]. Aunque JavaScript pueda procesar esto correctamente, puedes 
confundir a otros programadores al leer tu código.

ACTIVIDAD:

    - MODIFICA LOS DATOS ALMACENADOS EN EL INDICE 0 de myArray A UN VALOR DE 45.

    // Configuración
    const myArray = [18, 64, 99];

    // Cambia solo el código debajo de esta línea
    myArray[0] = 45;

---------------------------------------
ARREGLOS MULTIDIMENSIONALES CON INDICES
----------------------------------------

Se puede pensar que un arreglo multidimensional es como un arreglo de arreglos.
Cuando usas corchetes para acceder a tu arreglo, el primer par de corchetes 
se refiere a las entradas en el arreglo externo(el primero nivel) y cada par 
adicional de corchetes se refiere al siguiente nivel de entradas.

Ejemplo:

